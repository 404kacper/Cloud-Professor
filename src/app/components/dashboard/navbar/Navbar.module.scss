// Method to match the figma design using dynamic units
@function px-to-vw($px, $base-width: 2560) {
  @return ($px / $base-width) * 100 + vw;
}

.container {
  position: relative;
  padding-left: 3vw;
  padding-bottom: 1vw;
  // for the selector gradient effect
  overflow: hidden;
  display: flex;
  flex-direction: column;
  height: 100%;

  // list styling reset
  ul,
  li {
    margin: 0;
    padding: 0;
    list-style: none;
  }

  .logoContainer {
    display: flex;
    align-items: center;
    width: 100%;
    height: 10vh;
  }

  .logo {
    color: white;
    letter-spacing: 0.2vw;
    text-align: center;
    font-size: px-to-vw(24);
    z-index: 2;

    h1 {
      // reset default margins on h1
      margin: 0;
    }
  }

  .navList {
    // position relative to contain selector
    position: relative;
    padding-top: px-to-vw(44);

    .selector {
      // important to maitain this aspec ratio
      // at 1:1 it will push circle to the centre creating misalignment with the background
      width: px-to-vw(12.5);
      height: px-to-vw(25);
      position: absolute;
      right: 0;
      top: 2.5vw;

      &::before {
        content: '';
        position: absolute;
        // current selector position
        right: -4.5vw;
        top: -4.5vw;
        width: 10vw;
        height: 10vw;

        background: radial-gradient(
          ellipse at center,
          rgb(11, 27, 49) 0%,
          rgba(43, 126, 182, 0) 75%
        );
      }
    }

    .navItem {
      // must be flexbox in order for the button to remain centered
      display: flex;
      align-items: center;
      font-size: px-to-vw(24);
      font-weight: 500;
      color: white;
      margin-bottom: px-to-vw(36);

      .navButton {
        display: flex;
        align-items: center;
        cursor: pointer;
        position: relative;

        .icon {
          width: px-to-vw(36); // 36 px
          height: px-to-vw(36);
          margin-right: px-to-vw(64);
          position: relative;
        }

        &Active {
          border-radius: 1.5vw;
          $horizontalPadding: 1vw;
          padding: 0.5vw $horizontalPadding;
          margin-left: -$horizontalPadding;
          position: relative;

          // Pseudo-element for background with soft light effect
          &::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border-radius: inherit;
            background-color: rgba(0, 0, 0, 0.85);
            mix-blend-mode: soft-light;
          }
        }
      }
    }
  }
}
